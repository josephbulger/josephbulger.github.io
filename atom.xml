<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Joseph Bulger]]></title>
  <link href="http://josephbulger.github.io/atom.xml" rel="self"/>
  <link href="http://josephbulger.github.io/"/>
  <updated>2014-02-04T20:52:19-05:00</updated>
  <id>http://josephbulger.github.io/</id>
  <author>
    <name><![CDATA[Joseph Bulger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The New Build]]></title>
    <link href="http://josephbulger.github.io/blog/2013/05/27/the-new-build/"/>
    <updated>2013-05-27T06:20:00-04:00</updated>
    <id>http://josephbulger.github.io/blog/2013/05/27/the-new-build</id>
    <content type="html"><![CDATA[<p>I just recently built a new computer. I decided to go middle of the road on this one, and build something that I anticipate will last me around 2 to 3 years. So far I am completely <strong>loving</strong> this build.</p>

<p>Let&rsquo;s get into the nuts and bolts. <!-- more --></p>

<h3>The Case</h3>

<p>First things first, what is this new build going to sit inside of. This go around I decided to get a Cooler Master HAF X case. Specifically <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16811119225">this one</a>.</p>

<h3>AMD Build</h3>

<p>I went with an AMD build for a couple of reasons. First and foremost, because AMD recently received a set of processors that go up to 8 core, and are prepackaged overclocked, all for around $200. Getting an Intel 8 core is guaranteed to run you more than that. Price is a major factor here. I know that each AMD core is not nearly as powerful as an Intel core, but I&rsquo;m banking on the idea that it&rsquo;s powerful enough for what I&rsquo;m trying to accomplish, and that running a multi-core architecture is more in line with how I use my computer. The processor I ended up choosing was a <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16819113284">FX-8350 Vishera</a>.</p>

<h3>Board</h3>

<p>I got an <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16813131969">ASUS SABERTOOTH 990FX/GEN3</a>. Key factors on this one was the fact that it runs the Vishera smoothly. The fact that it has PCI-E 3 lanes was an added bonus, even if it&rsquo;s not <strong>true</strong> PCI-E 3 because it&rsquo;s stealing the lanes from the other slots. That&rsquo;s fine for me because I&rsquo;m only going to use 2 slots on those lanes anyway.</p>

<h3>Graphics</h3>

<p>I have two cross fired <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16814150605">Radeon HD 7870</a>. They are un.. fricking&hellip; believable. These two things crossfired together make all the games I currently own <strong>scream</strong>. They should keep me entertained for a really long time.</p>

<h3>RAM</h3>

<p>I went with 32 GB of <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16820231610">GSkill RAM</a>. Timings on them were 9-9-9-24. An interesting thing about the RAM. When I first booted my computer, the RAM LED was giving me errors on boot. Turns out that I didn&rsquo;t put the RAM all the way into the slot because the motherboard had only one latch on each slot (on the top) and not on the on the bottom. I had to put each RAM into the slot at the bottom first, then put it in the top, put the latch down, and then go back to the bottom and push it back on the bottom again.</p>

<h3>Hard Drives</h3>

<p>Only other things of note I think is how I set up my hard drives.</p>

<p>I have a <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16820147193">256 GB SSD</a> boot drive. On top of that I have a <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16822136555">VelociRaptor drive</a> for all my programs. I followed all of that up with 2 <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16822148844">3 TB drives</a> in a RAID 1 configuration. I set up the RAID via hardware controllers through BIOS. Only tricky thing about that was I had to install windows on the SSD with the RAID drivers loaded so I could boot the SSD via RAID setup even though it wasn&rsquo;t configured for it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Kit on a MBP]]></title>
    <link href="http://josephbulger.github.io/blog/2012/10/08/installing-kit-on-a-mbp/"/>
    <updated>2012-10-08T11:22:40-04:00</updated>
    <id>http://josephbulger.github.io/blog/2012/10/08/installing-kit-on-a-mbp</id>
    <content type="html"><![CDATA[<p><a href="http://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/">This article</a> was invaluable to me when I was confronted with the task of installing a slew of development tools on my new MacBook Pro.</p>

<!-- more -->


<p>This runs you threw installing the following items:</p>

<ul>
<li><p>Xcode</p></li>
<li><p>Homebrew</p></li>
<li><p>Git</p></li>
<li><p>RVM</p></li>
<li><p>Ruby 1.9.3</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gist @ GitHub and why it's awesome]]></title>
    <link href="http://josephbulger.github.io/blog/2011/10/18/gist-github-and-why-its-awesome/"/>
    <updated>2011-10-18T04:00:08-04:00</updated>
    <id>http://josephbulger.github.io/blog/2011/10/18/gist-github-and-why-its-awesome</id>
    <content type="html"><![CDATA[<p>In case you haven&rsquo;t noticed, a lot of my posts recently have been using <a href="https://gist.github.com/">gist</a>. It&rsquo;s an awesome tool that&rsquo;s freely available which allows you to write snippets of code in a variety of languages.</p>

<!-- more -->


<p>Not only does it do that, but the actual gist that you create is a full fledged Git repository, which means you have the ability to clone it , pull and push from it.</p>

<p>I also use a <a href="http://wordpress.org/extend/plugins/embed-github-gist/">plug in</a> for my blog that let&rsquo;s me show individual files on any of my gists.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Datastructures, Objects, and why Hybrids are evil]]></title>
    <link href="http://josephbulger.github.io/blog/2011/09/10/datastructures-objects-and-why-hybrids-are-evil/"/>
    <updated>2011-09-10T08:31:50-04:00</updated>
    <id>http://josephbulger.github.io/blog/2011/09/10/datastructures-objects-and-why-hybrids-are-evil</id>
    <content type="html"><![CDATA[<p>I was writing this code that let&rsquo;s interviewees code problems for me, and it verifies that the interviewee actually writes something that works. I got to a point in my printer classes that I wasn&rsquo;t liking, and I thought I&rsquo;d share it.</p>

<!-- more -->


<p>I have a printer that allows the candidate to print something, which actually verifies that they&rsquo;re code up to that point is correct. It looks something like this</p>

<div><script src='https://gist.github.com/1208486.js?file=Hybrid.cs'></script>
<noscript><pre><code>public class Console
{
  public int Counter { get; set; }

  public void Print(string message)
  {
    CheckThatMessageIsCorrectForInterviewQuestion();
    Counter++;
  }
}
    </code></pre></noscript></div>


<p>It works exactly as I expected it to, but there was something I didn&rsquo;t like about it. I didn&rsquo;t like the Counter. I didn&rsquo;t want the candidates messing with it. My first inclination was to change the setter to private, but it got me to thinking.</p>

<p>The Console was definitely intended to be an Object. The whole point was to let the candidate use the Print method. What I had done, however, was create a Hybrid. It&rsquo;s a Hybrid because having the Counter property also makes Console a Data Structure. That&rsquo;s why I wasn&rsquo;t liking it. To the outside world, this class was a Hybrid, and I wanted it to be an Object. I needed my testing framework to know what the Counter was to test that the candidate had actually called Print enough times, though. So how do I fix it? Another problem was that even if I made Counter with a private setter, it would still look like a Data Structure. You might argue that a property is just a fancy kind of method, but it still <em><strong>feels</strong></em> like a Data Structure.</p>

<p>Ultimately, I decided on this</p>

<div><script src='https://gist.github.com/1208486.js?file=Object.cs'></script>
<noscript><pre><code>public class Console
{
  private int Counter { get; set; }

  public void Print(string message)
  {
    CheckThatMessageIsCorrectForInterviewQuestion();
    Counter++;
  }

  public int GetCount()
  {
    return Counter;
  }
}
    </code></pre></noscript></div>


<p>which I think looks a <em><strong>lot</strong></em> better from the outside, since you only have the ability to use the Console as an Object.</p>

<p>You may ask</p>

<blockquote><p>Why are Hybrids evil in the first place?</p></blockquote>

<p>Well, I think it was best framed by Robert C. Martin in <a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/ref=sr_1_1?ie=UTF8&amp;qid=1315672495&amp;sr=8-1">Clean Code</a></p>

<blockquote><p>This issue would be a lot less confusing if data structures had public variables and no functions, whereas objects had private variables and public functions. However there are frameworks and standards (ie beans) that demand even simple data structures have accessors and mutators. &hellip;</p></blockquote>

<p>This confusion leads to unfortunate hybrid structures that are half object and half data structure. They have functions that do significant things, and they also have either public variables, or public accessors and mutators, that for all intents and purposes, make the private variables public, tempting other external functions to use those variables the way a procedural program would use a data structure.</p>

<p>Such hybrids make it hard to add a new function but also make it hard to add new data structures. They are the worst of both worlds. Avoid creating them. They are indicative of a muddled design whose authors are unsure of &ndash; or worse, ignorant of &ndash; whether they need protection from functions or types.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wireless Adapter Traps]]></title>
    <link href="http://josephbulger.github.io/blog/2011/08/08/wireless-adapter-traps/"/>
    <updated>2011-08-08T04:00:39-04:00</updated>
    <id>http://josephbulger.github.io/blog/2011/08/08/wireless-adapter-traps</id>
    <content type="html"><![CDATA[<p>Ok so you go to the store and you&rsquo;re looking around for an awesome deal on a Wireless-N adapter, and you find one for only $14!  &#8221;How can this be!?&ldquo; you might ask yourself?  Well, let me explain something to you before you end up with the same situation I find myself in right now.</p>

<!-- more -->


<p>Ok so my story goes a little differently than that, but it&rsquo;s basically the same thing.  My wife needed a new wireless adapter for her computer because the one she had was pathetically bad.</p>

<p>So, me being the tech nerd that I am, decided</p>

<blockquote><p>why not buy a Wireless-N adapter so when I upgrade my router in the next year or so she&rsquo;ll already be ready for it?</p></blockquote>

<p>So I went and got her a <a href="http://www.dlink.com/products/?pid=722">DLink DWA-125</a>.  Not only that but the price tag on the sucker was only like $14, which I thought was amazing.  Not until I <a href="http://josephbulger.github.io/blog/2011/08/07/linksys-e4200-retrospective/">upgraded my router</a> did I realize the error of my ways.  It&rsquo;s in the bands people, the bands will get you every time.</p>

<p>So I bought the adapter because it&rsquo;s Wireless-N.  And it is, don&rsquo;t get me wrong.  However, the bands it operates on are&hellip; well.. I should say&hellip; the <strong>band</strong> it operates on, is 2.4 GHz.  You might be thinking, &ldquo;what&rsquo;s the big deal Joe? Just connect to your router and go with it man.&rdquo;  Here&rsquo;s the problem. When you connect a device that runs G to a network that already has a device running on N, a couple things could happen.</p>

<p>You could be dropped to Wireless-G, and both adapters would run there.  Which kind of defeats the purpose of buying the N adapter, don&rsquo;t you think?</p>

<p>Or&hellip; Your network could go crazy and let the adapters battle it out, which is what happened to me.  Who won you might ask?  No one, because every time one of the adapters would lose connection, it would just try to get it back, which would essentially kick the other one off, etc. etc.</p>

<p>So be aware when purchasing N adapters.  If you&rsquo;re like me and you have G devices that you<strong> still need to use</strong>, then you better get an N adapter that runs on a 5GHz band. How do you know if your router can handle this set up?  Well&hellip; <a href="http://josephbulger.github.io/blog/2011/08/07/linksys-e4200-retrospective/">that&rsquo;s a different story</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linksys E4200: Retrospective]]></title>
    <link href="http://josephbulger.github.io/blog/2011/08/07/linksys-e4200-retrospective/"/>
    <updated>2011-08-07T12:25:13-04:00</updated>
    <id>http://josephbulger.github.io/blog/2011/08/07/linksys-e4200-retrospective</id>
    <content type="html"><![CDATA[<p>I just recently retired my <a href="http://en.wikipedia.org/wiki/Linksys_WRT54G_series">WRT54G</a> in favor or a Wireless N Router.  I ended up going with the <a href="http://homestore.cisco.com/en-us/Routers/Linksys-E4200-MaximumPerformance-Wirelessn-router_stcVVproductId122703236VVcatId551966VVviewprod.htm">Linksys E4200</a> for a number of reasons.<!-- more --></p>

<p>First of all, it&rsquo;s a high performance router, and so far it&rsquo;s lived up to that expectation.  What do I mean by a high performance router?</p>

<blockquote><p>It&rsquo;s capable of handling 450 Mbps on the 5GHz band.</p></blockquote>

<p>We&rsquo;ll get to the band in a second.  This is going to be extremely useful for me later on when I start setting up a NAS in my house to stream content.</p>

<p>Secondly, it&rsquo;s a dual band router.  What exactly is a dual band router? It&rsquo;s pretty simple actually.</p>

<blockquote><p>The router has the ability to host two networks (3 if you include the guest network): one on a 5GHz band, and another on a 2.4 GHz band.</p></blockquote>

<p>Now, there are a couple catches here.  First, this router is a <strong>true</strong> dual band router.  What I mean by that is that it can run both bands <strong>simulataneously</strong>.  If you&rsquo;re in the market for a new router, you have to keep this in mind because you could be looking at a router that says it&rsquo;s dual band, but when you bring it home, it can&rsquo;t run them both at the same time, you have to choose which one to roll with.</p>

<p>For me, I have to have both bands up at the same time, which brings me to the second catch.  If you have devices (PCs, IPods, IPhones, Androids, etc.)  then it&rsquo;s likely that some are going to run on Wireless-G and some have Wireless-N.  In my household, most of the devices run on Wireless-G, and I have a couple that can run Wireless-N.</p>

<p>Here&rsquo;s the catch.  If you have a Wireless-N capable router and you have devices that are connecting to it via Wireless-G and Wireless-N <strong>on the same band</strong>, then the router has to choose the lesser of the two, which means everyone on that band is stuck on Wireless-G.  This goes for all routers, by the way.  This is where the two bands come into play.  If you have two bands, you can set one band up to run Wireless-N (5 GHz), and you can set up the other to be Wireless-G (2 GHz).</p>

<p>This brings me to the first complaint that I have about the E4200.  When I originally set up the router, I <strong>assumed</strong> that the router would be configured out of the box to handle the exact scenario that I described previously.  However, what I came to find out was that my router, out of the box, was configured in some kind of Mixed Mode setting for <strong>both bands</strong>.  This wreaked havoc on my network for a day or two because I didn&rsquo;t realize what was going on, and chalked it up to Comcast screwing with my internet again (they have a tendency to do this).  However, after sitting down for a second and thinking about it, I decided to go digging around in the settings and that&rsquo;s when I discovered the mixed mode issue.</p>

<p>This wouldn&rsquo;t have normally been a problem, except for one thing:</p>

<blockquote><p>I have a couple of devices at home that are Wireless-N but they only operate on the 2.4 GHz band.</p></blockquote>

<p>This caused a war to ensue on the router between my G devices and my N devices, the winner being no one. Long story short, I ended up doing a manual set up on my router, where the 5GHz band was configured to run only Wireless-N and the 2.4 GHz band was configured Wireless-G only.  Why did I do it that way?  Because Wireless-G devices can only operate on 2.4 GHz band, and the devices that I have that only handle Wireless-N on the 2.4 band automatically negotiate down to Wireless-G when connecting to the router on 2.4 now, which is what would happen to them anyway.</p>

<p>Once I did that the war ended and now everything is playing nicely together.  There has been one other snag along the way, but I&rsquo;ll save that for another post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A simple way to see if someone is spam scamming you]]></title>
    <link href="http://josephbulger.github.io/blog/2011/01/21/a-simple-way-to-see-if-someone-is-spam-scamming-you/"/>
    <updated>2011-01-21T03:19:14-05:00</updated>
    <id>http://josephbulger.github.io/blog/2011/01/21/a-simple-way-to-see-if-someone-is-spam-scamming-you</id>
    <content type="html"><![CDATA[<p>I hate having to sign up for anything on the internet. If I can avoid it I will, but nevertheless at some point you’re going to have to sign up for something.</p>

<!-- more -->


<p>Now, with signing up comes the distinct possibility that the site you’re signing up on will give your email away to someone, either intentionally or not.  Well, I use gmail as my email server, and one of the really cool features that they recognize is Address Tags.</p>

<p>What are Address Tags?  I’ll show you.  Let’s say you sign up for some site, but you want to know if they pass your email on to someone else.  When they ask for you email address, you can tag your email with something specific to that site.  Say, for example, that my email is <a href="mailto:john.doe@gmail.com">john.doe@gmail.com</a>.  When I sign up on a site and give my email, I could instead give them <a href="mailto:john.doe+youreascumbag@gmail.com">john.doe+youreascumbag@gmail.com</a> and it would still go to <strong>my </strong>email.  This is pretty cool, because now whenever they send you an email, you’ll have that tag in your address, so you’ll know it was definitely from them, but also, if they give out that email to anyone else and <strong>they contact you</strong> it will be the same email, so you’ll at least <strong>know </strong>who’s spam scamming you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When Windows tells you that it's not geniune...]]></title>
    <link href="http://josephbulger.github.io/blog/2010/09/07/when-windows-tells-you-that-its-not-geniune/"/>
    <updated>2010-09-07T07:16:52-04:00</updated>
    <id>http://josephbulger.github.io/blog/2010/09/07/when-windows-tells-you-that-its-not-geniune</id>
    <content type="html"><![CDATA[<p>I recently had to go through this because my windows installation started telling me it was not genuine and I needed to activate it.  This was completely false, being that the key I was using to activate the product was completely legit.</p>

<p>So if you find yourself in the same boat as me, and you are wondering what you should do, follow these steps.<!-- more --></p>

<p>Once you have a valid Key it remains valid and it is that way that MS designed it. However, corrupted licensing files may occur once there is an infection or it could be more reasons around there. Nonetheless try this entering these command on an &ldquo;elevated DOS prompt&rdquo; (click start> type CMD> right click CMD icon and run as admin)</p>

<ol>
<li><p>type slmgr /upk and press enter ( a notification should pop up that the PK has been uninstalled)</p></li>
<li><p>type slmgr /cpky and press enter (this clears out the PK from registry)</p></li>
<li><p>type slmgr /rilc and press enter ( this will reinstall licensing files)</p></li>
<li><p>restart your computer twice, (if it would ask you to enter the product key on the 1st restart click ask me later and restart once more)</p></li>
<li><p>After the 2nd restart, it will ask you to enter the PK, Yes enter it. It will automatically validate but maybe if you&rsquo;re lucky it would take it. If not,.. step 6.</p></li>
<li><p>click start  and type &ldquo;slui 4&rdquo; (without the quotes) and press enter. This will open the phone activation option. Choose your country correctly and phone in the activation server. At this point, the installation ID should be valid (unless you are using pirated copy or product key) and the phone activation server will give you the confirmation ID. It will ask you how many times you have installed your copy&mdash; of course just say once.</p></li>
</ol>


<p><a href="http://social.technet.microsoft.com/Forums/en-US/w7itproinstall/thread/f0ec949f-4865-4a63-849c-af386de1b1fa">The original article I found this from was here.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating an PagedList<T> that uses AJAX]]></title>
    <link href="http://josephbulger.github.io/blog/2010/04/14/creating-an-pagedlistt-that-uses-ajax/"/>
    <updated>2010-04-14T05:05:58-04:00</updated>
    <id>http://josephbulger.github.io/blog/2010/04/14/creating-an-pagedlistt-that-uses-ajax</id>
    <content type="html"><![CDATA[<p>I’ve been using this PagedList functionality that i found from a <a href="http://blog.wekeroad.com/2007/12/10/aspnet-mvc-pagedlistt/">blog article Rob Conery</a> put up, and <a href="http://code-inside.de/blog-in/2008/04/08/aspnet-mvc-pagination-view-user-control/">a control I found by Robert Muehsig</a> which I’ve really enjoyed using so far.</p>

<p>One of the things that was missing from the functional set that I ended up needing was the ability to page the list, but through issuing AJAX requests instead of the typical post back.</p>

<p>So I went off and extended the existing model to support AJAX requests, and thought I would share it in case anyone else needed to do the same thing.<!-- more --></p>

<p>I guess the best place to start would be the use case.  So to start I created a control that encapsulates the Paging UI layout and calls I need.  The use of the original control looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">Html</span><span class="p">.</span><span class="n">RenderPartial</span><span class="p">(</span><span class="s">&quot;AjaxPagination&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="k">new</span> <span class="n">AjaxPaginationViewData</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">PageIndex</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span><span class="p">,</span>
</span><span class='line'>            <span class="n">Action</span> <span class="p">=</span> <span class="s">&quot;CondoPage&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">Controller</span> <span class="p">=</span> <span class="s">&quot;Home&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">AjaxOptions</span> <span class="p">=</span>
</span><span class='line'>                <span class="k">new</span> <span class="n">AjaxOptions</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">UpdateTargetId</span> <span class="p">=</span> <span class="s">&quot;updatedContent&quot;</span> <span class="p">},</span>
</span><span class='line'>            <span class="n">TotalCount</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">TotalCount</span><span class="p">,</span>
</span><span class='line'>            <span class="n">PageSize</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageSize</span><span class="p">,</span>
</span><span class='line'>            <span class="n">NumberOfPagesToEachSide</span> <span class="p">=</span> <span class="m">2</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The new AJAX functionality is called similarly:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="p">&lt;%</span> <span class="k">using</span> <span class="p">(</span><span class="n">Ajax</span><span class="p">.</span><span class="n">BeginForm</span><span class="p">(</span><span class="s">&quot;SomePage&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s">&quot;SomeController&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="k">new</span> <span class="n">AjaxOptions</span> <span class="p">{</span> <span class="n">UpdateTargetId</span> <span class="p">=</span> <span class="s">&quot;updatedContent&quot;</span> <span class="p">}))</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">&lt;%</span> <span class="n">Html</span><span class="p">.</span><span class="n">RenderPartial</span><span class="p">(</span><span class="s">&quot;AjaxPagination&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="k">new</span> <span class="n">AjaxPaginationViewData</span> <span class="p">{</span>
</span><span class='line'>                    <span class="n">PageIndex</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">Action</span> <span class="p">=</span> <span class="s">&quot;SomeAction&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">Controller</span> <span class="p">=</span> <span class="s">&quot;SomeController&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">AjaxOptions</span> <span class="p">=</span> <span class="k">new</span> <span class="n">AjaxOptions</span>
</span><span class='line'>                        <span class="p">{</span> <span class="n">UpdateTargetId</span> <span class="p">=</span> <span class="s">&quot;updatedContent&quot;</span> <span class="p">},</span>
</span><span class='line'>                    <span class="n">TotalCount</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">TotalCount</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">PageSize</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageSize</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">NumberOfPagesToEachSide</span> <span class="p">=</span> <span class="m">2</span>
</span><span class='line'>        <span class="p">});%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>A couple things to note. You’ll notice that the AJAX control is rendered inside a Ajax.BeginForm. This is because I’m using the Microsoft.Ajax way of making AJAX calls.  This could also be done using jQuery or something else that can process AJAX calls. I just went this way because the scripts are already included in asp.net mvc app when you first create the project.  The result of the AJAX call will be a partial view, and we’ll need to put that somewhere.  That’s where the UpdatedTargetId comes into play. Other things we include in the AJAX control that are not in the original are the Action and the Controller, and some AjaxOptions. PageActionLink doesn’t work with the AJAX control, because we’ll be using Ajax.ActionLink to build the link, which is why I broke it up into Action, and Controller. For the AjaxOptions, we need those to specify the target of the call.</p>

<p>So now that’s been explained, let’s look at the controls themselves.  Here’s a comparison of the original control and the ajax control.</p>

<p>The original is one this way:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">HasPreviousPage</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>    <span class="p">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="p">=</span><span class="s">&quot;&lt;%=Model.PageActionLink.Replace(&quot;</span><span class="p">%</span><span class="m">7</span><span class="n">Bpage</span><span class="p">%</span><span class="m">7D</span><span class="s">&quot;, (Model.PageIndex - 1).ToString())%&gt;&quot;</span><span class="p">&gt;</span><span class="n">Previous</span><span class="p">&lt;/</span><span class="n">a</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">GetFirstPageToLink</span><span class="p">()</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;...&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span><span class="k">for</span> <span class="p">(</span><span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetFirstPageToLink</span><span class="p">();</span> <span class="n">page</span> <span class="p">&lt;=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">();</span> <span class="n">page</span><span class="p">++)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">page</span> <span class="p">==</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>        <span class="p">&lt;%=</span><span class="n">page</span><span class="p">.</span><span class="n">ToString</span><span class="p">()%&gt;</span>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>    <span class="p">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="p">=</span><span class="s">&quot;&lt;%=Model.PageActionLink.Replace(&quot;</span><span class="p">%</span><span class="m">7</span><span class="n">Bpage</span><span class="p">%</span><span class="m">7D</span><span class="s">&quot;, page.ToString())%&gt;&quot;</span><span class="p">&gt;&lt;%=</span><span class="n">page</span><span class="p">.</span><span class="n">ToString</span><span class="p">()%&gt;&lt;/</span><span class="n">a</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">page</span> <span class="p">!=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">())</span> <span class="p">{</span> <span class="p">%&gt;|&lt;%</span> <span class="p">}</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">()</span> <span class="p">!=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageCount</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;...&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">HasNextPage</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>    <span class="p">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="p">=</span><span class="s">&quot;&lt;%=Model.PageActionLink.Replace(&quot;</span><span class="p">%</span><span class="m">7</span><span class="n">Bpage</span><span class="p">%</span><span class="m">7D</span><span class="s">&quot;, (Model.PageIndex + 1).ToString())%&gt;&quot;</span><span class="p">&gt;</span><span class="n">Next</span><span class="p">&lt;/</span><span class="n">a</span><span class="p">&gt;</span>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the AJAX control is done this way:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">HasPreviousPage</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%=</span> <span class="n">Ajax</span><span class="p">.</span><span class="n">ActionLink</span><span class="p">(</span><span class="s">&quot;Previous&quot;</span><span class="p">,</span> <span class="n">Model</span><span class="p">.</span><span class="n">Action</span><span class="p">,</span> <span class="n">Model</span><span class="p">.</span><span class="n">Controller</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">page</span> <span class="p">=</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span> <span class="p">-</span> <span class="m">1</span><span class="p">).</span><span class="n">ToString</span><span class="p">()</span> <span class="p">},</span> <span class="n">Model</span><span class="p">.</span><span class="n">AjaxOptions</span><span class="p">)%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">GetFirstPageToLink</span><span class="p">()</span> <span class="p">!=</span> <span class="m">1</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;...&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span><span class="k">for</span> <span class="p">(</span><span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetFirstPageToLink</span><span class="p">();</span> <span class="n">page</span> <span class="p">&lt;=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">();</span> <span class="n">page</span><span class="p">++)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">page</span> <span class="p">==</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>        <span class="p">&lt;%=</span><span class="n">page</span><span class="p">.</span><span class="n">ToString</span><span class="p">()%&gt;</span>
</span><span class='line'>    <span class="p">&lt;%</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%=</span> <span class="n">Ajax</span><span class="p">.</span><span class="n">ActionLink</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">ToString</span><span class="p">(),</span> <span class="n">Model</span><span class="p">.</span><span class="n">Action</span><span class="p">,</span> <span class="n">Model</span><span class="p">.</span><span class="n">Controller</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">page</span> <span class="p">=</span> <span class="n">page</span><span class="p">.</span><span class="n">ToString</span><span class="p">()</span> <span class="p">},</span> <span class="n">Model</span><span class="p">.</span><span class="n">AjaxOptions</span><span class="p">)%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="k">if</span> <span class="p">(</span><span class="n">page</span> <span class="p">!=</span> <span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">())</span> <span class="p">{</span> <span class="p">%&gt;</span> <span class="p">|</span> <span class="p">&lt;%</span> <span class="p">}</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">GetLastPageToLink</span><span class="p">()</span> <span class="p">!=</span> <span class="n">Model</span><span class="p">.</span><span class="n">PageCount</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;...&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="k">if</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">HasNextPage</span><span class="p">)</span> <span class="p">{</span> <span class="p">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%=</span> <span class="n">Ajax</span><span class="p">.</span><span class="n">ActionLink</span><span class="p">(</span><span class="s">&quot;Next&quot;</span><span class="p">,</span> <span class="n">Model</span><span class="p">.</span><span class="n">Action</span><span class="p">,</span> <span class="n">Model</span><span class="p">.</span><span class="n">Controller</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">page</span> <span class="p">=</span> <span class="p">(</span><span class="n">Model</span><span class="p">.</span><span class="n">PageIndex</span> <span class="p">+</span> <span class="m">1</span><span class="p">).</span><span class="n">ToString</span><span class="p">()</span> <span class="p">},</span> <span class="n">Model</span><span class="p">.</span><span class="n">AjaxOptions</span><span class="p">)%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;%</span> <span class="p">}</span> <span class="p">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The big difference here is the way that the links are generated. The original control simply creates an anchor tag and passes in the url generated by the Model. The AJAX control uses AJAX.ActionLink() instead, so we can have the link support AJAX.</p>

<p>So knowing how the control looks, this is the Model for the AJAX control itself:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="k">class</span> <span class="nc">AjaxPaginationViewData</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">NumberOfPagesToEachSide</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">PageIndex</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">PageSize</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">TotalCount</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Action</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">string</span> <span class="n">Controller</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="n">AjaxOptions</span> <span class="n">AjaxOptions</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="n">PageCount</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">Math</span><span class="p">.</span><span class="n">Ceiling</span><span class="p">((</span><span class="kt">double</span><span class="p">)</span><span class="n">TotalCount</span> <span class="p">/</span> <span class="n">PageSize</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">public</span> <span class="kt">bool</span> <span class="n">HasPreviousPage</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="n">PageIndex</span> <span class="p">&gt;</span> <span class="m">1</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">bool</span> <span class="n">HasNextPage</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">get</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="n">PageIndex</span> <span class="p">*</span> <span class="n">PageSize</span><span class="p">)</span> <span class="p">&lt;=</span> <span class="n">TotalCount</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="nf">GetFirstPageToLink</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">PageIndex</span> <span class="p">-</span> <span class="n">NumberOfPagesToEachSide</span> <span class="p">&gt;</span> <span class="m">1</span> <span class="p">?</span> <span class="n">PageIndex</span> <span class="p">-</span> <span class="n">NumberOfPagesToEachSide</span> <span class="p">:</span> <span class="m">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="kt">int</span> <span class="nf">GetLastPageToLink</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">(</span><span class="n">PageIndex</span> <span class="p">+</span> <span class="n">NumberOfPagesToEachSide</span> <span class="p">&lt;</span> <span class="n">PageCount</span> <span class="p">?</span> <span class="n">PageIndex</span> <span class="p">+</span> <span class="n">NumberOfPagesToEachSide</span> <span class="p">:</span> <span class="n">PageCount</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>That pretty much explains how the control is built.</p>

<p>The only thing left is how the interaction with PagedList happens.  For that we look at the action that the control calls.  In this example, we’re calling SomeAction in SomeController, and it would look something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="k">public</span> <span class="n">ActionResult</span> <span class="nf">SomeAction</span><span class="p">(</span><span class="kt">int</span> <span class="n">page</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CachedPage</span> <span class="p">=</span> <span class="n">page</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">query</span> <span class="p">=</span> <span class="n">GetSearchQuery</span><span class="p">(</span><span class="n">CachedSearchParameters</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">var</span> <span class="n">model</span> <span class="p">=</span> <span class="n">query</span><span class="p">.</span><span class="n">ToPagedList</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">DefaultPageSize</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nf">PartialView</span><span class="p">(</span><span class="s">&quot;AjaxResults&quot;</span><span class="p">,</span> <span class="n">model</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The ToPagedList performs the functionality that is included with the PagedList classes which you can find <a href="http://pagedlist.codeplex.com/">here</a>.</p>

<p>Let me know what you think, and if you’d like some demo source to see this in action I can happily provide, just let me know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Are you a Nerd, Geek, or Dork?]]></title>
    <link href="http://josephbulger.github.io/blog/2010/03/30/are-you-a-nerd-geek-or-dork/"/>
    <updated>2010-03-30T03:23:27-04:00</updated>
    <id>http://josephbulger.github.io/blog/2010/03/30/are-you-a-nerd-geek-or-dork</id>
    <content type="html"><![CDATA[<p>I just got an email from a friend of mine with this and I couldn’t pass up throwing this on my blog.</p>

<!-- more -->


<p><img src="http://josephbulger.github.io/images/posts/2010/03/Nerd_Dork_Geek_Venn_Diagram_thumb.jpg"></p>

<p>Here’s the <a href="http://www.greatwhitesnark.com/2010/03/25/difference-between-nerd-dork-and-geek-explained-in-a-venn-diagram/?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed:+greatwhitesnark/yqzr+(Great+White+Snark">original article</a>) that this came from.</p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Impressions of Droid Eris]]></title>
    <link href="http://josephbulger.github.io/blog/2010/02/22/first-impressions-of-droid-eris/"/>
    <updated>2010-02-22T16:28:08-05:00</updated>
    <id>http://josephbulger.github.io/blog/2010/02/22/first-impressions-of-droid-eris</id>
    <content type="html"><![CDATA[<p>I just recently got a new phone, a Droid Eris. So far I&rsquo;m liking it a lot. The keyboard is surprisingly easy to use. I haven&rsquo;t gotten around to tethereing the phone yet, but thats my next step. Then I&rsquo;ll be able to use my computer from the road, something the iPhone didn&rsquo;t offer me, which is why I went with an Android phone. So here&rsquo;s hoping!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I finally got an invite to Google Voice]]></title>
    <link href="http://josephbulger.github.io/blog/2009/09/05/i-finally-got-an-invite-to-google-voice/"/>
    <updated>2009-09-05T02:31:17-04:00</updated>
    <id>http://josephbulger.github.io/blog/2009/09/05/i-finally-got-an-invite-to-google-voice</id>
    <content type="html"><![CDATA[<p><a href="https://www.google.com/voice">Google Voice</a> is a message management system that was originally called  Grand Central, but got bought out by Google.  I was a real fan even before Google got it, but all the lines had been bought out so I couldn&rsquo;t get into it.  I recently received an email that they had opened up some more lines, so I jumped.</p>

<!-- more -->


<p>Now I have google voice, and there are some things that I think are <strong>really</strong> cool about it.  When someone leaves you a voicemail, it transcribes the recording for you so you can read it online.  Also, all texts that are sent to you are viewable online as well.  One other awesome feature is that you can add a call widget to your web site (I have one on the right hand side) that allows people to call you without giving out your phone number.  It&rsquo;s great if you have a portfolio online, and want people to contact you about freelance jobs or something, but you don&rsquo;t want to give out your number.</p>

<p>Check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BlackBerry Curve: 2 years and still truckin']]></title>
    <link href="http://josephbulger.github.io/blog/2009/06/09/blackberry-curve-2-years-and-still-truckin/"/>
    <updated>2009-06-09T04:48:22-04:00</updated>
    <id>http://josephbulger.github.io/blog/2009/06/09/blackberry-curve-2-years-and-still-truckin</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been unexpectedly suprised by the longevity of my BlackBerry Curve.  I&rsquo;m coming up on my 2 year mark, and it&rsquo;s still operating the same as it was when I bought it.  I think that&rsquo;s the first phone I&rsquo;ve had that I can say that of.  That&rsquo;s also not for lack of use, either.  I&rsquo;ve really beat the heck out of this phone.  The only issue I&rsquo;ve come across is the ball will get sticky every now and then and it won&rsquo;t respond to movement.  There&rsquo;s a simple remedy, though.  All you have to do is move around the ball with a damp cloth.  After you&rsquo;ve done that for a bit, let it dry and you should be able to use the ball again.  I&rsquo;ve had to do this about 4 times, because my son, Isaac, get&rsquo;s a hold of the thing and get&rsquo;s some <em>funk </em>on it.</p>

<p>All in all, very pleased with my BlackBerry.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hurricanes among us]]></title>
    <link href="http://josephbulger.github.io/blog/2009/03/07/hurricanes/"/>
    <updated>2009-03-07T03:05:33-05:00</updated>
    <id>http://josephbulger.github.io/blog/2009/03/07/hurricanes</id>
    <content type="html"><![CDATA[<p>In case you weren&rsquo;t aware of this already, I&rsquo;m located at the tip end of Florida in a city called Homestead.  So needless to say I&rsquo;m very concerned about Hurricane forecasts!  I usually use the <a href="http://www.nhc.noaa.gov/">National Hurricane Center</a>&rsquo;s information when tracking hurricanes, but I recently came across this other tool that does a really good job of visually presenting you the data.  The tool is called <a href="http://www.stormpulse.com/">Storm Pulse</a> and it gives a Flash representation of the Atlantic Basin.  You can look at historical tracks, weather models, wind models, etc. </p>

<p> Really cool Stuff.  Check it out if you get some time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Visual Studio Tip: Jump Between Braces]]></title>
    <link href="http://josephbulger.github.io/blog/2009/03/07/visual-studio-jump-tip/"/>
    <updated>2009-03-07T03:01:32-05:00</updated>
    <id>http://josephbulger.github.io/blog/2009/03/07/visual-studio-jump-tip</id>
    <content type="html"><![CDATA[<p>Have you ever found yourself lost inside some sort of block statement, wondering when the beginning of the block began or ended?  I just found this awesome feature in Visual Studio that allows me to jump to the beginning or ending of a block. </p>

<!-- more -->


<p>To do this, put your cursor before or after the brace (your choice) and then press <strong>Ctrl+]</strong>. It works with either curly or round braces.</p>

<p>I originally found this nifty little feature from another <a href="http://vkreynin.wordpress.com/2008/07/09/jump-between-braces-in-visual-studio/">blog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Analytics]]></title>
    <link href="http://josephbulger.github.io/blog/2009/03/07/google-analytics/"/>
    <updated>2009-03-07T02:59:59-05:00</updated>
    <id>http://josephbulger.github.io/blog/2009/03/07/google-analytics</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been doing the consulting thing for a while now.  Today I came across something that kind of blew my mind away.  I was setting up my blog and getting everything working the way I wanted, when I came across a &ldquo;Tracking Script&rdquo; section.  On the left hand side it says &ldquo;Visitor tracking script, The JavaScript code from i.e. Google Analytics.&#8221;  Of course, the word Google immediately caught my eye and my curiousity flew through the roof.</p>

<!-- more -->


<h2> What is <a href="https://www.google.com/analytics/">Google Analytics</a>?</h2>

<p>Well, if you&rsquo;ve ever hosted a web site before, at one point or another you&rsquo;re going to wonder how much traffic is going to your site.  If your site is a form of marketing for you, then you&rsquo;re probably also going to want to know not only how much traffic, but also where is it coming from.  What are the demographics?  My current host for my consulting firm has some traffic information that I can access at all times, which is nice, don&rsquo;t get me wrong.  However, once I went and signed up for Google Analytics and started researching it, I immediately wanted to replace what I was using.</p>

<h3>How much does it cost?</h3>

<p>This is going to really get you.  It&rsquo;s free, as in beer.  If you have a gmail account already, then you&rsquo;ve got everything you need to go ahead and set up an account for analytics.</p>

<h3>Basic Features</h3>

<p>It will track traffic at a domain level, and provide you with the following features:</p>

<ul>
<li><p>Visit Information</p></li>
<li><p>Page Information</p></li>
<li><p>Bounce Rate</p></li>
<li><p>Average Time on Site</p></li>
<li><p>% New Visits</p></li>
<li><p>Map Overlay</p></li>
<li><p>Traffic Sources Information</p></li>
<li><p>Content Information</p></li>
<li><p>Email reports</p>

<ul>
<li><p>Instant and Scheduled Emails</p></li>
<li><p>PDF</p></li>
<li><p>CSV</p></li>
<li><p>XML</p></li>
<li><p>TSV</p></li>
</ul>
</li>
<li><p>Export Reports</p>

<ul>
<li><p>PDF</p></li>
<li><p>XML</p></li>
</ul>
</li>
</ul>


<h3>Advanced Features</h3>

<p>Analytics has a concept of &ldquo;Conversions&rdquo; which tracks how people actually use your site.  You can identify certain pages as being a &ldquo;Goal&rdquo;: for instance, a thank you page that a user would hit after they&rsquo;ve filled out a form, something to that effect.  Once they hit that page, Analytics will mark that visit as a &ldquo;Conversion Goal&rdquo;.  This allows you to track your ROI on your site, and is implemented very well.  The interface is clean and intuitive. </p>

<h3>Final Words</h3>

<p>I&rsquo;ll be implementing this on a couple of sites and write a followup of how it goes.  I have a few concerns about performance since it looks as if it will be pinging an external server on every page request, but so far I haven&rsquo;t had any noticeable differences.</p>

<p> Stay Tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[And so it begins]]></title>
    <link href="http://josephbulger.github.io/blog/2009/03/06/hello-world/"/>
    <updated>2009-03-06T08:43:15-05:00</updated>
    <id>http://josephbulger.github.io/blog/2009/03/06/hello-world</id>
    <content type="html"><![CDATA[<p>Welcome to <strong>JosephBulger.com</strong>!  This is hopefully going to be the first of many blogs that I write!  This blog will focus on things that I take interest of mostly: my family, programming, various technologies, etc.</p>

<!-- more -->


<h2>My Family</h2>

<p>Needless to say, this is where the majority of my time and effort are spent!  So naturally, I&rsquo;ll be blogging a great deal about my family.</p>

<p>My wonderful wife, Michelle, takes care of our entire family, which is completely unbelievable.  She&rsquo;s also running  a <a href="http://www.cookingwithmichelle.com">blog.</a></p>

<p>Sarah is just finishing up 4rth grade! </p>

<p>Joseph is talking/walking/running/anything like crazy and Isaac has nearly mastered the art of walking and is moving onto the science of speaking.</p>

<h2>Programming</h2>

<p>I&rsquo;ll be writing a lot of blogs about programming concepts and their applications that I come across in my work.</p>

<h2><a href="http://www.rockdigitalconsulting.com">RockDigital Consulting</a> </h2>

<p>I work full time as a Senior Software Engineer, but I also run a consulting company on the side that I might write about preiodically as well.  Sound like a plug?  You bet it is =P  Sorry, have to get my advertising in when I can!  Anything cool and exciting that happens to my company I&rsquo;ll most likely blog about so people can see what&rsquo;s happening there.</p>

<h2>Technologies</h2>

<p>This could really be about anything, but its most likely going to be cool gadgets, ideas, frameworks I&rsquo;m looking into or using.</p>
]]></content>
  </entry>
  
</feed>
